<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
                 version="2.0">

    <named-query name="UserEntity.existsByUsername">
        <query>
            SELECT CASE WHEN COUNT(user) > 0
            THEN TRUE ELSE FALSE END
            FROM User user
            WHERE LOWER(user.username) LIKE LOWER(:username)
            AND user.status = 'ACTIVE'
        </query>
    </named-query>

    <named-query name="UserEntity.existsByEmail">
        <query>
            SELECT CASE WHEN COUNT(user) > 0
            THEN TRUE ELSE FALSE END
            FROM User user
            WHERE LOWER(user.email) LIKE LOWER(:email)
            AND user.status = 'ACTIVE'
        </query>
    </named-query>

    <named-query name="UserEntity.findById">
        <query>
            SELECT user
            FROM User user
            WHERE user.id = :id
            AND user.status = 'ACTIVE'
        </query>
    </named-query>

    <named-query name="TokenEntity.findByCode">
        <query>
            SELECT token
            FROM Token token
            WHERE token.code = :code
        </query>
    </named-query>

    <named-query name="TokenEntity.findByUserEmail">
        <query>
            SELECT token
            FROM Token token
            WHERE token.user.email = :email
        </query>
    </named-query>

    <named-query name="ChatEntity.findAllOrdered">
        <query>
            SELECT chat
            FROM Chat chat
            JOIN chat.users user
            WHERE user.id = :userId
            ORDER BY chat.lastMessageSentAt DESC
        </query>
    </named-query>
</entity-mappings>